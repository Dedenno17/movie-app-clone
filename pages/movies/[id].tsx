import { NextPage } from 'next';
import { useRouter } from 'next/router';
import { useState } from 'react';
import TrailerVideo from '../../src/components/UI/TrailerVideo';
import ProfileMovie from '../../src/components/Movies/MoviesDetail/ProfileMovie';
import ButtonCategory from '../../src/components/Movies/MoviesDetail/ButtonCategory';
import InfoMovie from '../../src/components/Movies/MoviesDetail/InfoMovie';
import useFetch from '../../src/hooks/useFetch';
import detailMovieInterface from '../../src/models/detailMovieData';
import detailMovieVideoInterface from '../../src/models/detailMovieVideo';
import CastsContent from '../../src/components/UI/CastsContent';
import Head from 'next/head';
import SocialMedia from '../../src/components/UI/SocialMedia';
import detailMovieSimilarInterface from '../../src/models/detailMovieSimilar';
import SimilarContent from '../../src/components/UI/SimilarContent';
import SkeletonLoadingContentsDetail from '../../src/components/UI/SkeletonLoadingContentsDetail';

const MoviesDetail: NextPage = () => {
  // get the router query
  const router = useRouter();
  const { id } = router.query;

  // state detail movie data
  const [detailMovieData, setDetailMovieData] = useState<
    detailMovieInterface | undefined
  >(undefined);

  // state trailer data
  const [detailVideoTrailer, setDetailVideoTrailer] = useState<
    detailMovieVideoInterface | undefined
  >(undefined);

  // state similar data
  const [detailSimilarMovies, setDetailSimilarMovies] = useState<
    detailMovieSimilarInterface | undefined
  >(undefined);

  // state of kind of category
  const [category, setCategory] = useState<string>('info');

  // function to change category info
  const changeCategoryHandler = (cat: string) => {
    setCategory(cat);
  };

  // fetching detail movie data
  const { isLoading: loadingMovie } = useFetch(
    `https://api.themoviedb.org/3/movie/${id}?api_key=639d75e6b806c03213815ae9aa5a9376&language=en-US`,
    id,
    setDetailMovieData
  );

  // fetching detail movie trailer video
  const { isLoading: loadingTrailer } = useFetch(
    `https://api.themoviedb.org/3/movie/${id}/videos?api_key=639d75e6b806c03213815ae9aa5a9376&language=en-US`,
    id,
    setDetailVideoTrailer
  );

  // fetching detail similar movies
  const { isLoading: loadingSimilarMovies } = useFetch(
    `https://api.themoviedb.org/3/movie/${id}/similar?api_key=639d75e6b806c03213815ae9aa5a9376&language=en-US&page=1`,
    id,
    setDetailSimilarMovies
  );

  return (
    <div className="w-full">
      <Head>
        <title>{detailMovieData ? detailMovieData.title : 'Movies'}</title>
        <meta
          name={
            detailMovieData
              ? detailMovieData.tagline
              : 'Kumpulan Film-film Populer dari berbagai genre dan berbagai production house ternama di dunia, seperti Disney, FOX, dan lain-lain'
          }
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {detailMovieData &&
        detailVideoTrailer &&
        detailSimilarMovies &&
        !loadingMovie &&
        !loadingTrailer &&
        !loadingSimilarMovies && (
          <>
            <TrailerVideo
              id={detailVideoTrailer.id}
              results={detailVideoTrailer.results}
            />
            <ProfileMovie
              image={detailMovieData.poster_path}
              title={detailMovieData.title}
              tagline={detailMovieData.tagline}
              releaseDate={detailMovieData.release_date}
              productionCountries={detailMovieData.production_countries}
              runtime={detailMovieData.runtime}
              genres={detailMovieData.genres}
              voteAverage={detailMovieData.vote_average}
              voteCount={detailMovieData.vote_count}
            />
            <ButtonCategory
              onChange={changeCategoryHandler}
              category={category}
            />
            <div className="w-full px-10 py-8">
              {category === 'info' && (
                <InfoMovie
                  overview={detailMovieData.overview}
                  title={detailMovieData.title}
                  originalTitle={detailMovieData.original_title}
                  productionCompanies={detailMovieData.production_companies}
                  image={detailMovieData.backdrop_path}
                  voteAverage={detailMovieData.vote_average}
                  voteCount={detailMovieData.vote_count}
                />
              )}
              {category === 'cast' && (
                <CastsContent id={id} typeContent="movie" />
              )}
            </div>
            <SocialMedia />
            <SimilarContent data={detailSimilarMovies} />
          </>
        )}
      {!detailMovieData &&
        !detailVideoTrailer &&
        !detailSimilarMovies &&
        loadingMovie &&
        loadingTrailer &&
        loadingSimilarMovies && <SkeletonLoadingContentsDetail />}
    </div>
  );
};

export default MoviesDetail;
